@model TreeView
<table class="table table-bordered">
    <tr>
        <th style="width: 1px;">
            Size
        </th>
        <th>
            Name
        </th>
    </tr>
    @foreach (var item in Model.Objects.OrderByDescending(i => i.ObjectType).ThenBy(i => i.Name))
    {
        <tr>
            <td>
                @item.Size
            </td>
            <td>
                @switch (item.ObjectType)
                {
                    case ObjectType.Commit:
                        if (Model.Submodules.Keys.Contains(item.Name))
                        {
                            <a href="@Model.Submodules[item.Name].Url/tree/@item.Hash">@item.Name</a>
                        }
                        else
                        {
                            @item.Name
                        }
                        <span>@@@item.Hash.Substring(0, 16)</span>
                        break;
                    case ObjectType.Tree:
                        @Html.ActionLink(item.Name, "ViewTree", new { @object = Model.Tree, path = Model.Path + item.Name + "/" })
                        break;
                    case ObjectType.Blob:
                        @Html.ActionLink(item.Name, "ViewBlob", new { @object = Model.Tree, path = Model.Path + item.Name })
                        break;
                }
            </td>
        </tr>
    }
</table>