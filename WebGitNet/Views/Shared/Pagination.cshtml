@model PaginationInfo
@helper Link(string text, int page, string author = "") {
    var r = new RouteValueDictionary((object)Model.RouteValues);
    if (page != 1)
    {
        r[Model.RouteKey ?? "page"] = page;
    }
    
    if(author != "")
    {
        r["author"] = author;
    }

    <li class="@(page == Model.Page ? "active" : string.Empty)">@Html.ActionLink(text, (string)Model.ActionName, (string)Model.ControllerName, r, null)</li>
}
<div class="pagination pagination-centered">
    <ul>
        @Link("Newest", 1, Model.Author)
        @Link("Newer", Math.Max(Model.Page - 1, 1), Model.Author)

        @{
            int left = Math.Min(Model.Page - 1, 2);
            int right = Math.Min(Model.PageCount - Model.Page, 2);
            int startPage = Math.Max(1, Model.Page - left - (2 - right));
            int endPage = Math.Min(Model.PageCount, Model.Page + right + (2 - left));
            for (int p = startPage; p <= endPage; p++)
            {
                @Link(p.ToString(), p, Model.Author);
            }
        }

        @Link("Older", Math.Min(Model.Page + 1, Model.PageCount), Model.Author)
        @Link("Oldest", Model.PageCount, Model.Author)
    </ul>
</div>